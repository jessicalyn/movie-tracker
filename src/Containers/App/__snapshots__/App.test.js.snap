// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App App should match the snapshot with all data passed in 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App
    addMovies={
      [MockFunction] {
        "calls": Array [
          Array [
            Array [
              Object {
                "poster_path": "car.jpg",
                "title": "Cars",
              },
              Object {
                "poster_path": "dragon.jpg",
                "title": "How To Train Your Dragon",
              },
            ],
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
    user={
      Object {
        "id": 1,
        "name": "Taylor",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <header
          className="App-header"
        >
          <div
            className="header-box"
          >
            <h1>
              Movie Tracker
            </h1>
          </div>
          <div
            className="nav-box"
          >
            <NavLink
              className="nav"
              to="/favorites"
            >
              Favorites
            </NavLink>
            <NavLink
              className="nav"
              to="/"
            >
              Home
            </NavLink>
            <button
              onClick={[Function]}
            >
              Log Out
            </button>
          </div>
        </header>,
        <Route
          component={[Function]}
          exact={true}
          path="/"
        />,
        <Route
          component={[Function]}
          exact={true}
          path="/login"
        />,
        <Route
          component={[Function]}
          exact={true}
          path="/signup"
        />,
        <Route
          component={[Function]}
          exact={true}
          path="/favorites"
        />,
      ],
      "className": "App",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="header-box"
            >
              <h1>
                Movie Tracker
              </h1>
            </div>,
            <div
              className="nav-box"
            >
              <NavLink
                className="nav"
                to="/favorites"
              >
                Favorites
              </NavLink>
              <NavLink
                className="nav"
                to="/"
              >
                Home
              </NavLink>
              <button
                onClick={[Function]}
              >
                Log Out
              </button>
            </div>,
            undefined,
          ],
          "className": "App-header",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <h1>
                Movie Tracker
              </h1>,
              "className": "header-box",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Movie Tracker",
              },
              "ref": null,
              "rendered": "Movie Tracker",
              "type": "h1",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                false,
                false,
                <NavLink
                  className="nav"
                  to="/favorites"
                >
                  Favorites
                </NavLink>,
                <NavLink
                  className="nav"
                  to="/"
                >
                  Home
                </NavLink>,
                <button
                  onClick={[Function]}
                >
                  Log Out
                </button>,
              ],
              "className": "nav-box",
            },
            "ref": null,
            "rendered": Array [
              false,
              false,
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": "Favorites",
                  "className": "nav",
                  "to": "/favorites",
                },
                "ref": null,
                "rendered": "Favorites",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": "Home",
                  "className": "nav",
                  "to": "/",
                },
                "ref": null,
                "rendered": "Home",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Log Out",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "Log Out",
                "type": "button",
              },
            ],
            "type": "div",
          },
          undefined,
        ],
        "type": "header",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "exact": true,
          "path": "/",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "exact": true,
          "path": "/login",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "exact": true,
          "path": "/signup",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "exact": true,
          "path": "/favorites",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <header
            className="App-header"
          >
            <div
              className="header-box"
            >
              <h1>
                Movie Tracker
              </h1>
            </div>
            <div
              className="nav-box"
            >
              <NavLink
                className="nav"
                to="/favorites"
              >
                Favorites
              </NavLink>
              <NavLink
                className="nav"
                to="/"
              >
                Home
              </NavLink>
              <button
                onClick={[Function]}
              >
                Log Out
              </button>
            </div>
          </header>,
          <Route
            component={[Function]}
            exact={true}
            path="/"
          />,
          <Route
            component={[Function]}
            exact={true}
            path="/login"
          />,
          <Route
            component={[Function]}
            exact={true}
            path="/signup"
          />,
          <Route
            component={[Function]}
            exact={true}
            path="/favorites"
          />,
        ],
        "className": "App",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="header-box"
              >
                <h1>
                  Movie Tracker
                </h1>
              </div>,
              <div
                className="nav-box"
              >
                <NavLink
                  className="nav"
                  to="/favorites"
                >
                  Favorites
                </NavLink>
                <NavLink
                  className="nav"
                  to="/"
                >
                  Home
                </NavLink>
                <button
                  onClick={[Function]}
                >
                  Log Out
                </button>
              </div>,
              undefined,
            ],
            "className": "App-header",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <h1>
                  Movie Tracker
                </h1>,
                "className": "header-box",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Movie Tracker",
                },
                "ref": null,
                "rendered": "Movie Tracker",
                "type": "h1",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  false,
                  false,
                  <NavLink
                    className="nav"
                    to="/favorites"
                  >
                    Favorites
                  </NavLink>,
                  <NavLink
                    className="nav"
                    to="/"
                  >
                    Home
                  </NavLink>,
                  <button
                    onClick={[Function]}
                  >
                    Log Out
                  </button>,
                ],
                "className": "nav-box",
              },
              "ref": null,
              "rendered": Array [
                false,
                false,
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": "Favorites",
                    "className": "nav",
                    "to": "/favorites",
                  },
                  "ref": null,
                  "rendered": "Favorites",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": "Home",
                    "className": "nav",
                    "to": "/",
                  },
                  "ref": null,
                  "rendered": "Home",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Log Out",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": "Log Out",
                  "type": "button",
                },
              ],
              "type": "div",
            },
            undefined,
          ],
          "type": "header",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "exact": true,
            "path": "/",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "exact": true,
            "path": "/login",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "exact": true,
            "path": "/signup",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "exact": true,
            "path": "/favorites",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

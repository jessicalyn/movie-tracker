// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Login Login should match the snapshot with all data passed in 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Login />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="login-box"
        >
          <form
            onSubmit={[Function]}
          >
            <div
              className="login-header"
            >
              <h3>
                Please Log in
              </h3>
            </div>
            <div
              className="username-input input-box"
            >
              <img
                alt="user-icon"
                src="user.png"
              />
              <input
                name="email"
                onChange={[Function]}
                placeholder="Enter your email address"
                type="text"
                value=""
              />
            </div>
            <div
              className="password-input input-box"
            >
              <img
                alt="password-icon"
                src="password-icon.png"
              />
              <input
                name="password"
                onChange={[Function]}
                placeholder="Enter your password"
                type="text"
                value=""
              />
            </div>
            <button>
              Submit
            </button>
            <p
              className="error-message"
            />
          </form>
        </div>,
        <Route
          exact={true}
          path="/login"
          render={[Function]}
        />,
      ],
      "className": "login",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <form
            onSubmit={[Function]}
          >
            <div
              className="login-header"
            >
              <h3>
                Please Log in
              </h3>
            </div>
            <div
              className="username-input input-box"
            >
              <img
                alt="user-icon"
                src="user.png"
              />
              <input
                name="email"
                onChange={[Function]}
                placeholder="Enter your email address"
                type="text"
                value=""
              />
            </div>
            <div
              className="password-input input-box"
            >
              <img
                alt="password-icon"
                src="password-icon.png"
              />
              <input
                name="password"
                onChange={[Function]}
                placeholder="Enter your password"
                type="text"
                value=""
              />
            </div>
            <button>
              Submit
            </button>
            <p
              className="error-message"
            />
          </form>,
          "className": "login-box",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="login-header"
              >
                <h3>
                  Please Log in
                </h3>
              </div>,
              <div
                className="username-input input-box"
              >
                <img
                  alt="user-icon"
                  src="user.png"
                />
                <input
                  name="email"
                  onChange={[Function]}
                  placeholder="Enter your email address"
                  type="text"
                  value=""
                />
              </div>,
              <div
                className="password-input input-box"
              >
                <img
                  alt="password-icon"
                  src="password-icon.png"
                />
                <input
                  name="password"
                  onChange={[Function]}
                  placeholder="Enter your password"
                  type="text"
                  value=""
                />
              </div>,
              <button>
                Submit
              </button>,
              <p
                className="error-message"
              />,
            ],
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <h3>
                  Please Log in
                </h3>,
                "className": "login-header",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Please Log in",
                },
                "ref": null,
                "rendered": "Please Log in",
                "type": "h3",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <img
                    alt="user-icon"
                    src="user.png"
                  />,
                  <input
                    name="email"
                    onChange={[Function]}
                    placeholder="Enter your email address"
                    type="text"
                    value=""
                  />,
                ],
                "className": "username-input input-box",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "alt": "user-icon",
                    "src": "user.png",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "img",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "name": "email",
                    "onChange": [Function],
                    "placeholder": "Enter your email address",
                    "type": "text",
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <img
                    alt="password-icon"
                    src="password-icon.png"
                  />,
                  <input
                    name="password"
                    onChange={[Function]}
                    placeholder="Enter your password"
                    type="text"
                    value=""
                  />,
                ],
                "className": "password-input input-box",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "alt": "password-icon",
                    "src": "password-icon.png",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "img",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "name": "password",
                    "onChange": [Function],
                    "placeholder": "Enter your password",
                    "type": "text",
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Submit",
              },
              "ref": null,
              "rendered": "Submit",
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": undefined,
                "className": "error-message",
              },
              "ref": null,
              "rendered": null,
              "type": "p",
            },
          ],
          "type": "form",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "exact": true,
          "path": "/login",
          "render": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="login-box"
          >
            <form
              onSubmit={[Function]}
            >
              <div
                className="login-header"
              >
                <h3>
                  Please Log in
                </h3>
              </div>
              <div
                className="username-input input-box"
              >
                <img
                  alt="user-icon"
                  src="user.png"
                />
                <input
                  name="email"
                  onChange={[Function]}
                  placeholder="Enter your email address"
                  type="text"
                  value=""
                />
              </div>
              <div
                className="password-input input-box"
              >
                <img
                  alt="password-icon"
                  src="password-icon.png"
                />
                <input
                  name="password"
                  onChange={[Function]}
                  placeholder="Enter your password"
                  type="text"
                  value=""
                />
              </div>
              <button>
                Submit
              </button>
              <p
                className="error-message"
              />
            </form>
          </div>,
          <Route
            exact={true}
            path="/login"
            render={[Function]}
          />,
        ],
        "className": "login",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <form
              onSubmit={[Function]}
            >
              <div
                className="login-header"
              >
                <h3>
                  Please Log in
                </h3>
              </div>
              <div
                className="username-input input-box"
              >
                <img
                  alt="user-icon"
                  src="user.png"
                />
                <input
                  name="email"
                  onChange={[Function]}
                  placeholder="Enter your email address"
                  type="text"
                  value=""
                />
              </div>
              <div
                className="password-input input-box"
              >
                <img
                  alt="password-icon"
                  src="password-icon.png"
                />
                <input
                  name="password"
                  onChange={[Function]}
                  placeholder="Enter your password"
                  type="text"
                  value=""
                />
              </div>
              <button>
                Submit
              </button>
              <p
                className="error-message"
              />
            </form>,
            "className": "login-box",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="login-header"
                >
                  <h3>
                    Please Log in
                  </h3>
                </div>,
                <div
                  className="username-input input-box"
                >
                  <img
                    alt="user-icon"
                    src="user.png"
                  />
                  <input
                    name="email"
                    onChange={[Function]}
                    placeholder="Enter your email address"
                    type="text"
                    value=""
                  />
                </div>,
                <div
                  className="password-input input-box"
                >
                  <img
                    alt="password-icon"
                    src="password-icon.png"
                  />
                  <input
                    name="password"
                    onChange={[Function]}
                    placeholder="Enter your password"
                    type="text"
                    value=""
                  />
                </div>,
                <button>
                  Submit
                </button>,
                <p
                  className="error-message"
                />,
              ],
              "onSubmit": [Function],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <h3>
                    Please Log in
                  </h3>,
                  "className": "login-header",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Please Log in",
                  },
                  "ref": null,
                  "rendered": "Please Log in",
                  "type": "h3",
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <img
                      alt="user-icon"
                      src="user.png"
                    />,
                    <input
                      name="email"
                      onChange={[Function]}
                      placeholder="Enter your email address"
                      type="text"
                      value=""
                    />,
                  ],
                  "className": "username-input input-box",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "alt": "user-icon",
                      "src": "user.png",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "img",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "name": "email",
                      "onChange": [Function],
                      "placeholder": "Enter your email address",
                      "type": "text",
                      "value": "",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <img
                      alt="password-icon"
                      src="password-icon.png"
                    />,
                    <input
                      name="password"
                      onChange={[Function]}
                      placeholder="Enter your password"
                      type="text"
                      value=""
                    />,
                  ],
                  "className": "password-input input-box",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "alt": "password-icon",
                      "src": "password-icon.png",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "img",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "name": "password",
                      "onChange": [Function],
                      "placeholder": "Enter your password",
                      "type": "text",
                      "value": "",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Submit",
                },
                "ref": null,
                "rendered": "Submit",
                "type": "button",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": undefined,
                  "className": "error-message",
                },
                "ref": null,
                "rendered": null,
                "type": "p",
              },
            ],
            "type": "form",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "exact": true,
            "path": "/login",
            "render": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

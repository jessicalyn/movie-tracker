// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Signup Signup should match the snapshot with all data passed in 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Signup
    loginUser={[MockFunction]}
    user={
      Object {
        "id": 1,
        "name": "Taylor",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <form
          onSubmit={[Function]}
        >
          <input
            name="name"
            onChange={[Function]}
            placeholder="name"
            type="text"
            value=""
          />
          <input
            name="email"
            onChange={[Function]}
            placeholder="email"
            type="text"
            value=""
          />
          <input
            name="password"
            onChange={[Function]}
            placeholder="password"
            type="text"
            value=""
          />
          <button>
            Sign up
          </button>
        </form>,
        "",
        <Route
          exact={true}
          path="/Signup"
          render={[Function]}
        />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <input
              name="name"
              onChange={[Function]}
              placeholder="name"
              type="text"
              value=""
            />,
            <input
              name="email"
              onChange={[Function]}
              placeholder="email"
              type="text"
              value=""
            />,
            <input
              name="password"
              onChange={[Function]}
              placeholder="password"
              type="text"
              value=""
            />,
            <button>
              Sign up
            </button>,
          ],
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "name": "name",
              "onChange": [Function],
              "placeholder": "name",
              "type": "text",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "name": "email",
              "onChange": [Function],
              "placeholder": "email",
              "type": "text",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "name": "password",
              "onChange": [Function],
              "placeholder": "password",
              "type": "text",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Sign up",
            },
            "ref": null,
            "rendered": "Sign up",
            "type": "button",
          },
        ],
        "type": "form",
      },
      "",
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "exact": true,
          "path": "/Signup",
          "render": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "section",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <form
            onSubmit={[Function]}
          >
            <input
              name="name"
              onChange={[Function]}
              placeholder="name"
              type="text"
              value=""
            />
            <input
              name="email"
              onChange={[Function]}
              placeholder="email"
              type="text"
              value=""
            />
            <input
              name="password"
              onChange={[Function]}
              placeholder="password"
              type="text"
              value=""
            />
            <button>
              Sign up
            </button>
          </form>,
          "",
          <Route
            exact={true}
            path="/Signup"
            render={[Function]}
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <input
                name="name"
                onChange={[Function]}
                placeholder="name"
                type="text"
                value=""
              />,
              <input
                name="email"
                onChange={[Function]}
                placeholder="email"
                type="text"
                value=""
              />,
              <input
                name="password"
                onChange={[Function]}
                placeholder="password"
                type="text"
                value=""
              />,
              <button>
                Sign up
              </button>,
            ],
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "name",
                "onChange": [Function],
                "placeholder": "name",
                "type": "text",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "email",
                "onChange": [Function],
                "placeholder": "email",
                "type": "text",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "password",
                "onChange": [Function],
                "placeholder": "password",
                "type": "text",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Sign up",
              },
              "ref": null,
              "rendered": "Sign up",
              "type": "button",
            },
          ],
          "type": "form",
        },
        "",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "exact": true,
            "path": "/Signup",
            "render": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "section",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
